#!/bin/bash

# Created by argbash-init v2.5.1
# ARG_OPTIONAL_SINGLE([url],[u],[Descargar la url proporcionada])
# ARG_OPTIONAL_SINGLE([lista],[l],[Lista de urls],[urls.lst])
# ARG_HELP([Wrapper simple para axel])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.5.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='ulh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_url=
_arg_lista="urls.lst"

print_help ()
{
	printf "%s\n" "Wrapper simple para axel"
	printf 'Usage: %s [-u|--url <arg>] [-l|--lista <arg>] [-h|--help]\n' "$0"
	printf "\t%s\n" "-u,--url: Descargar la url proporcionada (no default)"
	printf "\t%s\n" "-l,--lista: Lista de urls (default: '"urls.lst"')"
	printf "\t%s\n" "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-u|--url)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_url="$2"
				shift
				;;
			--url=*)
				_arg_url="${_key##--url=}"
				;;
			-u*)
				_arg_url="${_key##-u}"
				;;
			-l|--lista)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_lista="$2"
				shift
				;;
			--lista=*)
				_arg_lista="${_key##--lista=}"
				;;
			-l*)
				_arg_lista="${_key##-l}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

regex='^(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'

error="
        ERROR: ENLACE INCORRECTO
        Verifique que el enlace sea válido (debería comenzar con 'http://...')."

descargar_url()
{
    if [[ -n $1 ]];
    then
        if [[ $1 =~ $regex ]]
        then 
            axel -va $1
        else
            echo -e "$error \n\t\t$1"
        fi
        err=0
    else
        err=1
    fi
    return $err
}

descargar_lista()
{
    if [ -e $_arg_lista ]
    then
        while read url;
        do
            descargar_url $url
        done < $_arg_lista
    else
        echo -e "\n\tERROR: NO SE ENCUENTRA EL ARCHIVO '$_arg_lista'"
    fi
}

descargar_url $_arg_url || descargar_lista


# ] <-- needed because of Argbash
